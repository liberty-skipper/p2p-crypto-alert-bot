import time
import telebot
import requests
import os
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
USER_ID = os.getenv("USER_ID")

bot = telebot.TeleBot(BOT_TOKEN)

def get_binance_price(symbol="USDT"):
    try:
        response = requests.get(f"https://api.binance.com/api/v3/ticker/price?symbol={symbol}USDT")
        data = response.json()
        return float(data["price"])
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω—ã Binance: {e}")
        return None

def check_deals():
    binance_price = get_binance_price("BTC")
    if not binance_price:
        return

    test_market_price = binance_price * 0.89

    if test_market_price < binance_price * 0.9:
        message = f"üö® –ù–∞–π–¥–µ–Ω–∞ —Å–¥–µ–ª–∫–∞ –Ω–∏–∂–µ —Ä—ã–Ω–∫–∞!\n\nüí∞ –¶–µ–Ω–∞: {test_market_price:.2f} USDT\nüìä –†—ã–Ω–æ–∫: {binance_price:.2f} USDT\nüîª –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: {100 - test_market_price / binance_price * 100:.2f}%"
        bot.send_message(USER_ID, message)

@bot.message_handler(commands=["start"])
def send_welcome(message):
    bot.send_message(message.chat.id, "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –±—É–¥–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å p2p –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.")

def run_monitor():
    while True:
        check_deals()
        time.sleep(600)

if __name__ == "__main__":
    import threading
    threading.Thread(target=run_monitor).start()
    bot.polling()